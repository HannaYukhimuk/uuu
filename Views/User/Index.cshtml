@model IEnumerable<UserManagementApp.Models.User>
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "User Management";
}

<div class="container mt-4">
    <h2>User Management</h2>
    
    <div class="mb-3">
        <button id="blockUsersBtn" class="btn btn-danger">Block</button>
        <button id="unblockUsersBtn" class="btn btn-success">
            <i class="bi bi-unlock"></i> Unblock
        </button>
        <button id="deleteUsersBtn" class="btn btn-outline-danger">
            <i class="bi bi-trash"></i> Delete
        </button>
    </div>
    
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    <input type="checkbox" id="selectAllCheckbox" />
                </th>
                <th>Name</th>
                <th>Email</th>
                <th>Last Login</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" class="userCheckbox" value="@user.Id" />
                    </td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.LastLoginTime.ToString("g")</td>
                    <td>
                        @if (user.IsBlocked)
                        {
                            <span class="badge bg-danger">Blocked</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Active</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Select/Deselect all
            $('#selectAllCheckbox').change(function() {
                $('.userCheckbox').prop('checked', this.checked);
            });
            
            $('#blockUsersBtn').click(function() {
                const selectedIds = getSelectedUserIds();
                if (selectedIds.length > 0) {
                    if (confirm('Are you sure you want to block the selected users?')) {
                        postSelectedUsers('@Url.Action("BlockUsers", "User")', selectedIds);
                    }
                }
            });
            
            $('#unblockUsersBtn').click(function() {
                const selectedIds = getSelectedUserIds();
                if (selectedIds.length > 0) {
                    if (confirm('Are you sure you want to unblock the selected users?')) {
                        postSelectedUsers('@Url.Action("UnblockUsers", "User")', selectedIds);
                    }
                }
            });
            
            $('#deleteUsersBtn').click(function() {
                const selectedIds = getSelectedUserIds();
                if (selectedIds.length > 0) {
                    if (confirm('Are you sure you want to delete the selected users?')) {
                        postSelectedUsers('@Url.Action("DeleteUsers", "User")', selectedIds);
                    }
                }
            });
            
            function getSelectedUserIds() {
                return $('.userCheckbox:checked').map(function() {
                    return $(this).val();
                }).get();
            }
            
            function postSelectedUsers(url, ids) {
                $.post(url, { userIds: ids })
                    .done(function(data, status, xhr) {
                        handlePostResponse(xhr);
                    })
                    .fail(function(xhr) {
                        handlePostError(xhr);
                    });
            }
            
            function handlePostResponse(xhr) {
                if (xhr.responseJSON && xhr.responseJSON.redirectUrl) {
                    if (xhr.responseJSON.message) {
                        alert(xhr.responseJSON.message);
                    }
                    window.location.href = window.location.origin + xhr.responseJSON.redirectUrl;
                } 
                else if (xhr.responseJSON && xhr.responseJSON.success) {
                    if (xhr.responseJSON.message) {
                        alert(xhr.responseJSON.message);
                    }
                    window.location.reload();
                }
            }
            
            function handlePostError(xhr) {
                if (xhr.responseJSON && xhr.responseJSON.error) {
                    alert('Error: ' + xhr.responseJSON.error);
                } else {
                    alert('An error occurred');
                }
            }
        });
    </script>
}